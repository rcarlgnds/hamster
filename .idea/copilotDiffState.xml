<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/AssetActivationSetting.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/AssetActivationSetting.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model;&#10;&#10;public class AssetActivationSetting {&#10;    private String id;&#10;    private String divisionId;&#10;    private String positionId;&#10;    private int order;&#10;    private boolean isFinalApprover;&#10;&#10;    public AssetActivationSetting(String id, String divisionId, String positionId, int order, boolean isFinalApprover) {&#10;        this.id = id;&#10;        this.divisionId = divisionId;&#10;        this.positionId = positionId;&#10;        this.order = order;&#10;        this.isFinalApprover = isFinalApprover;&#10;    }&#10;&#10;    public String getId() {&#10;        return id;&#10;    }&#10;    public void setId(String id) {&#10;        this.id = id;&#10;    }&#10;    public String getDivisionId() {&#10;        return divisionId;&#10;    }&#10;    public void setDivisionId(String divisionId) {&#10;        this.divisionId = divisionId;&#10;    }&#10;    public String getPositionId() {&#10;        return positionId;&#10;    }&#10;    public void setPositionId(String positionId) {&#10;        this.positionId = positionId;&#10;    }&#10;    public int getOrder() {&#10;        return order;&#10;    }&#10;    public void setOrder(int order) {&#10;        this.order = order;&#10;    }&#10;    public boolean isFinalApprover() {&#10;        return isFinalApprover;&#10;    }&#10;    public void setFinalApprover(boolean finalApprover) {&#10;        isFinalApprover = finalApprover;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/ApproveActivationRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/ApproveActivationRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class ApproveActivationRequest {&#10;    private String assetId;&#10;    private String approverId;&#10;    private boolean approved;&#10;    private String notes;&#10;&#10;    public ApproveActivationRequest(String assetId, String approverId, boolean approved, String notes) {&#10;        this.assetId = assetId;&#10;        this.approverId = approverId;&#10;        this.approved = approved;&#10;        this.notes = notes;&#10;    }&#10;&#10;    public String getAssetId() {&#10;        return assetId;&#10;    }&#10;    public void setAssetId(String assetId) {&#10;        this.assetId = assetId;&#10;    }&#10;    public String getApproverId() {&#10;        return approverId;&#10;    }&#10;    public void setApproverId(String approverId) {&#10;        this.approverId = approverId;&#10;    }&#10;    public boolean isApproved() {&#10;        return approved;&#10;    }&#10;    public void setApproved(boolean approved) {&#10;        this.approved = approved;&#10;    }&#10;    public String getNotes() {&#10;        return notes;&#10;    }&#10;    public void setNotes(String notes) {&#10;        this.notes = notes;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateAssetActivationSettingRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateAssetActivationSettingRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateAssetActivationSettingRequest {&#10;    private String divisionId;&#10;    private String positionId;&#10;    private int order;&#10;    private boolean isFinalApprover;&#10;&#10;    public CreateAssetActivationSettingRequest(String divisionId, String positionId, int order, boolean isFinalApprover) {&#10;        this.divisionId = divisionId;&#10;        this.positionId = positionId;&#10;        this.order = order;&#10;        this.isFinalApprover = isFinalApprover;&#10;    }&#10;&#10;    public String getDivisionId() {&#10;        return divisionId;&#10;    }&#10;    public void setDivisionId(String divisionId) {&#10;        this.divisionId = divisionId;&#10;    }&#10;    public String getPositionId() {&#10;        return positionId;&#10;    }&#10;    public void setPositionId(String positionId) {&#10;        this.positionId = positionId;&#10;    }&#10;    public int getOrder() {&#10;        return order;&#10;    }&#10;    public void setOrder(int order) {&#10;        this.order = order;&#10;    }&#10;    public boolean isFinalApprover() {&#10;        return isFinalApprover;&#10;    }&#10;    public void setFinalApprover(boolean finalApprover) {&#10;        isFinalApprover = finalApprover;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateAssetCategoryRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateAssetCategoryRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateAssetCategoryRequest {&#10;    private String name;&#10;    private String code;&#10;    private String description;&#10;&#10;    public CreateAssetCategoryRequest(String name, String code, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateAssetSubCategoryRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateAssetSubCategoryRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateAssetSubCategoryRequest {&#10;    private String name;&#10;    private String code;&#10;    private String assetCategoryId;&#10;    private String description;&#10;&#10;    public CreateAssetSubCategoryRequest(String name, String code, String assetCategoryId, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.assetCategoryId = assetCategoryId;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getAssetCategoryId() {&#10;        return assetCategoryId;&#10;    }&#10;    public void setAssetCategoryId(String assetCategoryId) {&#10;        this.assetCategoryId = assetCategoryId;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateBrandRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateBrandRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateBrandRequest {&#10;    private String name;&#10;    private String code;&#10;    private String description;&#10;&#10;    public CreateBrandRequest(String name, String code, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateBuildingRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateBuildingRequest.java" />
              <option name="originalContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateBuildingRequest {&#10;    // TODO: Add fields&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateBuildingRequest {&#10;    private String name;&#10;    private String code;&#10;    private String hospitalId;&#10;    private String address;&#10;&#10;    public CreateBuildingRequest(String name, String code, String hospitalId, String address) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.hospitalId = hospitalId;&#10;        this.address = address;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getHospitalId() {&#10;        return hospitalId;&#10;    }&#10;    public void setHospitalId(String hospitalId) {&#10;        this.hospitalId = hospitalId;&#10;    }&#10;    public String getAddress() {&#10;        return address;&#10;    }&#10;    public void setAddress(String address) {&#10;        this.address = address;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateDivisionRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateDivisionRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateDivisionRequest {&#10;    private String name;&#10;    private String code;&#10;    private String description;&#10;&#10;    public CreateDivisionRequest(String name, String code, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateHospitalRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateHospitalRequest.java" />
              <option name="originalContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateHospitalRequest {&#10;    // TODO: Add fields&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateHospitalRequest {&#10;    private String name;&#10;    private String address;&#10;    private String code;&#10;    private String phone;&#10;    private String email;&#10;&#10;    public CreateHospitalRequest(String name, String address, String code, String phone, String email) {&#10;        this.name = name;&#10;        this.address = address;&#10;        this.code = code;&#10;        this.phone = phone;&#10;        this.email = email;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getAddress() {&#10;        return address;&#10;    }&#10;    public void setAddress(String address) {&#10;        this.address = address;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getPhone() {&#10;        return phone;&#10;    }&#10;    public void setPhone(String phone) {&#10;        this.phone = phone;&#10;    }&#10;    public String getEmail() {&#10;        return email;&#10;    }&#10;    public void setEmail(String email) {&#10;        this.email = email;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateNotificationRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateNotificationRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateNotificationRequest {&#10;    private String title;&#10;    private String message;&#10;    private String userId;&#10;    private String type;&#10;&#10;    public CreateNotificationRequest(String title, String message, String userId, String type) {&#10;        this.title = title;&#10;        this.message = message;&#10;        this.userId = userId;&#10;        this.type = type;&#10;    }&#10;&#10;    public String getTitle() {&#10;        return title;&#10;    }&#10;    public void setTitle(String title) {&#10;        this.title = title;&#10;    }&#10;    public String getMessage() {&#10;        return message;&#10;    }&#10;    public void setMessage(String message) {&#10;        this.message = message;&#10;    }&#10;    public String getUserId() {&#10;        return userId;&#10;    }&#10;    public void setUserId(String userId) {&#10;        this.userId = userId;&#10;    }&#10;    public String getType() {&#10;        return type;&#10;    }&#10;    public void setType(String type) {&#10;        this.type = type;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreatePositionRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreatePositionRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreatePositionRequest {&#10;    private String name;&#10;    private String code;&#10;    private String description;&#10;&#10;    public CreatePositionRequest(String name, String code, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateRoomRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateRoomRequest.java" />
              <option name="originalContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateRoomRequest {&#10;    // TODO: Add fields&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateRoomRequest {&#10;    private String name;&#10;    private String code;&#10;    private String floorId;&#10;    private String description;&#10;&#10;    public CreateRoomRequest(String name, String code, String floorId, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.floorId = floorId;&#10;        this.description = description;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getFloorId() {&#10;        return floorId;&#10;    }&#10;    public void setFloorId(String floorId) {&#10;        this.floorId = floorId;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateSubRoomRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateSubRoomRequest.java" />
              <option name="originalContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateSubRoomRequest {&#10;    // TODO: Add fields&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateSubRoomRequest {&#10;    private String name;&#10;    private String code;&#10;    private String roomId;&#10;    private String description;&#10;&#10;    public CreateSubRoomRequest(String name, String code, String roomId, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.roomId = roomId;&#10;        this.description = description;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getRoomId() {&#10;        return roomId;&#10;    }&#10;    public void setRoomId(String roomId) {&#10;        this.roomId = roomId;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateVendorRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateVendorRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateVendorRequest {&#10;    private String name;&#10;    private String code;&#10;    private String address;&#10;    private String phone;&#10;    private String email;&#10;    private String description;&#10;&#10;    public CreateVendorRequest(String name, String code, String address, String phone, String email, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.address = address;&#10;        this.phone = phone;&#10;        this.email = email;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getAddress() {&#10;        return address;&#10;    }&#10;    public void setAddress(String address) {&#10;        this.address = address;&#10;    }&#10;    public String getPhone() {&#10;        return phone;&#10;    }&#10;    public void setPhone(String phone) {&#10;        this.phone = phone;&#10;    }&#10;    public String getEmail() {&#10;        return email;&#10;    }&#10;    public void setEmail(String email) {&#10;        this.email = email;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateWorkingUnitRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/CreateWorkingUnitRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class CreateWorkingUnitRequest {&#10;    private String name;&#10;    private String code;&#10;    private String description;&#10;&#10;    public CreateWorkingUnitRequest(String name, String code, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/ExternalAssetRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/ExternalAssetRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class ExternalAssetRequest {&#10;    private String name;&#10;    private String code;&#10;    private String categoryId;&#10;    private String vendorId;&#10;    private String brandId;&#10;    private String serialNumber;&#10;    private String description;&#10;&#10;    public ExternalAssetRequest(String name, String code, String categoryId, String vendorId, String brandId, String serialNumber, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.categoryId = categoryId;&#10;        this.vendorId = vendorId;&#10;        this.brandId = brandId;&#10;        this.serialNumber = serialNumber;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getCategoryId() {&#10;        return categoryId;&#10;    }&#10;    public void setCategoryId(String categoryId) {&#10;        this.categoryId = categoryId;&#10;    }&#10;    public String getVendorId() {&#10;        return vendorId;&#10;    }&#10;    public void setVendorId(String vendorId) {&#10;        this.vendorId = vendorId;&#10;    }&#10;    public String getBrandId() {&#10;        return brandId;&#10;    }&#10;    public void setBrandId(String brandId) {&#10;        this.brandId = brandId;&#10;    }&#10;    public String getSerialNumber() {&#10;        return serialNumber;&#10;    }&#10;    public void setSerialNumber(String serialNumber) {&#10;        this.serialNumber = serialNumber;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/PrintByIdsRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/PrintByIdsRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;import java.util.List;&#10;&#10;public class PrintByIdsRequest {&#10;    private List&lt;String&gt; assetIds;&#10;&#10;    public PrintByIdsRequest(List&lt;String&gt; assetIds) {&#10;        this.assetIds = assetIds;&#10;    }&#10;&#10;    public List&lt;String&gt; getAssetIds() {&#10;        return assetIds;&#10;    }&#10;    public void setAssetIds(List&lt;String&gt; assetIds) {&#10;        this.assetIds = assetIds;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/PrintLabelRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/PrintLabelRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;import java.util.List;&#10;&#10;public class PrintLabelRequest {&#10;    private List&lt;String&gt; assetCodes;&#10;    private String templateId;&#10;&#10;    public PrintLabelRequest(List&lt;String&gt; assetCodes, String templateId) {&#10;        this.assetCodes = assetCodes;&#10;        this.templateId = templateId;&#10;    }&#10;&#10;    public List&lt;String&gt; getAssetCodes() {&#10;        return assetCodes;&#10;    }&#10;    public void setAssetCodes(List&lt;String&gt; assetCodes) {&#10;        this.assetCodes = assetCodes;&#10;    }&#10;    public String getTemplateId() {&#10;        return templateId;&#10;    }&#10;    public void setTemplateId(String templateId) {&#10;        this.templateId = templateId;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/StartActivationRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/StartActivationRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class StartActivationRequest {&#10;    private String assetId;&#10;    private String initiatorId;&#10;    private String notes;&#10;&#10;    public StartActivationRequest(String assetId, String initiatorId, String notes) {&#10;        this.assetId = assetId;&#10;        this.initiatorId = initiatorId;&#10;        this.notes = notes;&#10;    }&#10;&#10;    public String getAssetId() {&#10;        return assetId;&#10;    }&#10;    public void setAssetId(String assetId) {&#10;        this.assetId = assetId;&#10;    }&#10;    public String getInitiatorId() {&#10;        return initiatorId;&#10;    }&#10;    public void setInitiatorId(String initiatorId) {&#10;        this.initiatorId = initiatorId;&#10;    }&#10;    public String getNotes() {&#10;        return notes;&#10;    }&#10;    public void setNotes(String notes) {&#10;        this.notes = notes;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateAssetActivationSettingRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateAssetActivationSettingRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateAssetActivationSettingRequest {&#10;    private String divisionId;&#10;    private String positionId;&#10;    private int order;&#10;    private boolean isFinalApprover;&#10;&#10;    public UpdateAssetActivationSettingRequest(String divisionId, String positionId, int order, boolean isFinalApprover) {&#10;        this.divisionId = divisionId;&#10;        this.positionId = positionId;&#10;        this.order = order;&#10;        this.isFinalApprover = isFinalApprover;&#10;    }&#10;&#10;    public String getDivisionId() {&#10;        return divisionId;&#10;    }&#10;    public void setDivisionId(String divisionId) {&#10;        this.divisionId = divisionId;&#10;    }&#10;    public String getPositionId() {&#10;        return positionId;&#10;    }&#10;    public void setPositionId(String positionId) {&#10;        this.positionId = positionId;&#10;    }&#10;    public int getOrder() {&#10;        return order;&#10;    }&#10;    public void setOrder(int order) {&#10;        this.order = order;&#10;    }&#10;    public boolean isFinalApprover() {&#10;        return isFinalApprover;&#10;    }&#10;    public void setFinalApprover(boolean finalApprover) {&#10;        isFinalApprover = finalApprover;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateAssetCategoryRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateAssetCategoryRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateAssetCategoryRequest {&#10;    private String name;&#10;    private String code;&#10;    private String description;&#10;&#10;    public UpdateAssetCategoryRequest(String name, String code, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateAssetSubCategoryRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateAssetSubCategoryRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateAssetSubCategoryRequest {&#10;    private String name;&#10;    private String code;&#10;    private String assetCategoryId;&#10;    private String description;&#10;&#10;    public UpdateAssetSubCategoryRequest(String name, String code, String assetCategoryId, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.assetCategoryId = assetCategoryId;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getAssetCategoryId() {&#10;        return assetCategoryId;&#10;    }&#10;    public void setAssetCategoryId(String assetCategoryId) {&#10;        this.assetCategoryId = assetCategoryId;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateBrandRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateBrandRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateBrandRequest {&#10;    private String name;&#10;    private String code;&#10;    private String description;&#10;&#10;    public UpdateBrandRequest(String name, String code, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateBuildingRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateBuildingRequest.java" />
              <option name="originalContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateBuildingRequest {&#10;    // TODO: Add fields&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateBuildingRequest {&#10;    private String name;&#10;    private String code;&#10;    private String hospitalId;&#10;    private String address;&#10;&#10;    public UpdateBuildingRequest(String name, String code, String hospitalId, String address) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.hospitalId = hospitalId;&#10;        this.address = address;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getHospitalId() {&#10;        return hospitalId;&#10;    }&#10;    public void setHospitalId(String hospitalId) {&#10;        this.hospitalId = hospitalId;&#10;    }&#10;    public String getAddress() {&#10;        return address;&#10;    }&#10;    public void setAddress(String address) {&#10;        this.address = address;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateDivisionRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateDivisionRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateDivisionRequest {&#10;    private String name;&#10;    private String code;&#10;    private String description;&#10;&#10;    public UpdateDivisionRequest(String name, String code, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateHospitalRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateHospitalRequest.java" />
              <option name="originalContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateHospitalRequest {&#10;    // TODO: Add fields&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateHospitalRequest {&#10;    private String name;&#10;    private String address;&#10;    private String code;&#10;    private String phone;&#10;    private String email;&#10;&#10;    public UpdateHospitalRequest(String name, String address, String code, String phone, String email) {&#10;        this.name = name;&#10;        this.address = address;&#10;        this.code = code;&#10;        this.phone = phone;&#10;        this.email = email;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getAddress() {&#10;        return address;&#10;    }&#10;    public void setAddress(String address) {&#10;        this.address = address;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getPhone() {&#10;        return phone;&#10;    }&#10;    public void setPhone(String phone) {&#10;        this.phone = phone;&#10;    }&#10;    public String getEmail() {&#10;        return email;&#10;    }&#10;    public void setEmail(String email) {&#10;        this.email = email;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateNotificationRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateNotificationRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateNotificationRequest {&#10;    private boolean read;&#10;&#10;    public UpdateNotificationRequest(boolean read) {&#10;        this.read = read;&#10;    }&#10;&#10;    public boolean isRead() {&#10;        return read;&#10;    }&#10;    public void setRead(boolean read) {&#10;        this.read = read;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdatePositionRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdatePositionRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdatePositionRequest {&#10;    private String name;&#10;    private String code;&#10;    private String description;&#10;&#10;    public UpdatePositionRequest(String name, String code, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateRolePermissionRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateRolePermissionRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateRolePermissionRequest {&#10;    private String divisionId;&#10;    private String positionId;&#10;    private String permissions; // JSON string or comma separated, adjust as needed&#10;&#10;    public UpdateRolePermissionRequest(String divisionId, String positionId, String permissions) {&#10;        this.divisionId = divisionId;&#10;        this.positionId = positionId;&#10;        this.permissions = permissions;&#10;    }&#10;&#10;    public String getDivisionId() {&#10;        return divisionId;&#10;    }&#10;    public void setDivisionId(String divisionId) {&#10;        this.divisionId = divisionId;&#10;    }&#10;    public String getPositionId() {&#10;        return positionId;&#10;    }&#10;    public void setPositionId(String positionId) {&#10;        this.positionId = positionId;&#10;    }&#10;    public String getPermissions() {&#10;        return permissions;&#10;    }&#10;    public void setPermissions(String permissions) {&#10;        this.permissions = permissions;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateRoomRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateRoomRequest.java" />
              <option name="originalContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateRoomRequest {&#10;    // TODO: Add fields&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateRoomRequest {&#10;    private String name;&#10;    private String code;&#10;    private String floorId;&#10;    private String description;&#10;&#10;    public UpdateRoomRequest(String name, String code, String floorId, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.floorId = floorId;&#10;        this.description = description;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getFloorId() {&#10;        return floorId;&#10;    }&#10;    public void setFloorId(String floorId) {&#10;        this.floorId = floorId;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateSubRoomRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateSubRoomRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateSubRoomRequest {&#10;    private String name;&#10;    private String code;&#10;    private String roomId;&#10;    private String description;&#10;&#10;    public UpdateSubRoomRequest(String name, String code, String roomId, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.roomId = roomId;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getRoomId() {&#10;        return roomId;&#10;    }&#10;    public void setRoomId(String roomId) {&#10;        this.roomId = roomId;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateVendorRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateVendorRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateVendorRequest {&#10;    private String name;&#10;    private String code;&#10;    private String address;&#10;    private String phone;&#10;    private String email;&#10;    private String description;&#10;&#10;    public UpdateVendorRequest(String name, String code, String address, String phone, String email, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.address = address;&#10;        this.phone = phone;&#10;        this.email = email;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getAddress() {&#10;        return address;&#10;    }&#10;    public void setAddress(String address) {&#10;        this.address = address;&#10;    }&#10;    public String getPhone() {&#10;        return phone;&#10;    }&#10;    public void setPhone(String phone) {&#10;        this.phone = phone;&#10;    }&#10;    public String getEmail() {&#10;        return email;&#10;    }&#10;    public void setEmail(String email) {&#10;        this.email = email;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateWorkingUnitRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/request/UpdateWorkingUnitRequest.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.request;&#10;&#10;public class UpdateWorkingUnitRequest {&#10;    private String name;&#10;    private String code;&#10;    private String description;&#10;&#10;    public UpdateWorkingUnitRequest(String name, String code, String description) {&#10;        this.name = name;&#10;        this.code = code;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getCode() {&#10;        return code;&#10;    }&#10;    public void setCode(String code) {&#10;        this.code = code;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/AssetActivationResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/AssetActivationResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.Asset;&#10;import java.util.List;&#10;&#10;public class AssetActivationResponse {&#10;    private String id;&#10;    private String assetId;&#10;    private String status;&#10;    private List&lt;String&gt; approverIds;&#10;    private String createdAt;&#10;    private String updatedAt;&#10;&#10;    public AssetActivationResponse(String id, String assetId, String status, List&lt;String&gt; approverIds, String createdAt, String updatedAt) {&#10;        this.id = id;&#10;        this.assetId = assetId;&#10;        this.status = status;&#10;        this.approverIds = approverIds;&#10;        this.createdAt = createdAt;&#10;        this.updatedAt = updatedAt;&#10;    }&#10;&#10;    public String getId() {&#10;        return id;&#10;    }&#10;    public void setId(String id) {&#10;        this.id = id;&#10;    }&#10;    public String getAssetId() {&#10;        return assetId;&#10;    }&#10;    public void setAssetId(String assetId) {&#10;        this.assetId = assetId;&#10;    }&#10;    public String getStatus() {&#10;        return status;&#10;    }&#10;    public void setStatus(String status) {&#10;        this.status = status;&#10;    }&#10;    public List&lt;String&gt; getApproverIds() {&#10;        return approverIds;&#10;    }&#10;    public void setApproverIds(List&lt;String&gt; approverIds) {&#10;        this.approverIds = approverIds;&#10;    }&#10;    public String getCreatedAt() {&#10;        return createdAt;&#10;    }&#10;    public void setCreatedAt(String createdAt) {&#10;        this.createdAt = createdAt;&#10;    }&#10;    public String getUpdatedAt() {&#10;        return updatedAt;&#10;    }&#10;    public void setUpdatedAt(String updatedAt) {&#10;        this.updatedAt = updatedAt;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/AssetActivationSettingResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/AssetActivationSettingResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.AssetActivationSetting;&#10;import java.util.List;&#10;&#10;public class AssetActivationSettingResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;AssetActivationSetting&gt; data;&#10;&#10;    public AssetActivationSettingResponse(int page, int limit, int total, List&lt;AssetActivationSetting&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;AssetActivationSetting&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;AssetActivationSetting&gt; data) {&#10;        this.data = data;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/AssetApprovalStatusResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/AssetApprovalStatusResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;public class AssetApprovalStatusResponse {&#10;    private String assetId;&#10;    private String status;&#10;    private String lastApproverId;&#10;    private String lastUpdatedAt;&#10;&#10;    public AssetApprovalStatusResponse(String assetId, String status, String lastApproverId, String lastUpdatedAt) {&#10;        this.assetId = assetId;&#10;        this.status = status;&#10;        this.lastApproverId = lastApproverId;&#10;        this.lastUpdatedAt = lastUpdatedAt;&#10;    }&#10;&#10;    public String getAssetId() {&#10;        return assetId;&#10;    }&#10;    public void setAssetId(String assetId) {&#10;        this.assetId = assetId;&#10;    }&#10;    public String getStatus() {&#10;        return status;&#10;    }&#10;    public void setStatus(String status) {&#10;        this.status = status;&#10;    }&#10;    public String getLastApproverId() {&#10;        return lastApproverId;&#10;    }&#10;    public void setLastApproverId(String lastApproverId) {&#10;        this.lastApproverId = lastApproverId;&#10;    }&#10;    public String getLastUpdatedAt() {&#10;        return lastUpdatedAt;&#10;    }&#10;    public void setLastUpdatedAt(String lastUpdatedAt) {&#10;        this.lastUpdatedAt = lastUpdatedAt;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/AssetCategoryResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/AssetCategoryResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.AssetCategory;&#10;import java.util.List;&#10;&#10;public class AssetCategoryResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;AssetCategory&gt; data;&#10;&#10;    public AssetCategoryResponse(int page, int limit, int total, List&lt;AssetCategory&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;AssetCategory&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;AssetCategory&gt; data) {&#10;        this.data = data;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/AssetSubCategoryResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/AssetSubCategoryResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.AssetSubCategory;&#10;import java.util.List;&#10;&#10;public class AssetSubCategoryResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;AssetSubCategory&gt; data;&#10;&#10;    public AssetSubCategoryResponse(int page, int limit, int total, List&lt;AssetSubCategory&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;AssetSubCategory&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;AssetSubCategory&gt; data) {&#10;        this.data = data;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/BrandResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/BrandResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.Brand;&#10;import java.util.List;&#10;&#10;public class BrandResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;Brand&gt; data;&#10;&#10;    public BrandResponse(int page, int limit, int total, List&lt;Brand&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;Brand&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;Brand&gt; data) {&#10;        this.data = data;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/DivisionResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/DivisionResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.Division;&#10;import java.util.List;&#10;&#10;public class DivisionResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;Division&gt; data;&#10;&#10;    public DivisionResponse(int page, int limit, int total, List&lt;Division&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;Division&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;Division&gt; data) {&#10;        this.data = data;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/FloorResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/FloorResponse.java" />
              <option name="originalContent" value="package com.example.hamster.data.model.response;&#10;&#10;public class FloorResponse {&#10;    // TODO: Add fields&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.Floor;&#10;import java.util.List;&#10;&#10;public class FloorResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;Floor&gt; data;&#10;&#10;    public FloorResponse(int page, int limit, int total, List&lt;Floor&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;Floor&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;Floor&gt; data) {&#10;        this.data = data;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/MediaFileResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/MediaFileResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.MediaFile;&#10;import java.util.List;&#10;&#10;public class MediaFileResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;MediaFile&gt; data;&#10;&#10;    public MediaFileResponse(int page, int limit, int total, List&lt;MediaFile&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;MediaFile&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;MediaFile&gt; data) {&#10;        this.data = data;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/NotificationResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/NotificationResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import android.app.Notification;&#10;import java.util.List;&#10;&#10;public class NotificationResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;Notification&gt; data;&#10;&#10;    public NotificationResponse(int page, int limit, int total, List&lt;Notification&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;Notification&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;Notification&gt; data) {&#10;        this.data = data;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/PendingApprovalsResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/PendingApprovalsResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import java.util.List;&#10;&#10;public class PendingApprovalsResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;String&gt; assetIds;&#10;&#10;    public PendingApprovalsResponse(int page, int limit, int total, List&lt;String&gt; assetIds) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.assetIds = assetIds;&#10;    }&#10;&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;String&gt; getAssetIds() {&#10;        return assetIds;&#10;    }&#10;    public void setAssetIds(List&lt;String&gt; assetIds) {&#10;        this.assetIds = assetIds;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/PositionResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/PositionResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.Position;&#10;import java.util.List;&#10;&#10;public class PositionResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;Position&gt; data;&#10;&#10;    public PositionResponse(int page, int limit, int total, List&lt;Position&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;Position&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;Position&gt; data) {&#10;        this.data = data;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/PrinterStatusResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/PrinterStatusResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;public class PrinterStatusResponse {&#10;    private boolean connected;&#10;    private String statusMessage;&#10;&#10;    public PrinterStatusResponse(boolean connected, String statusMessage) {&#10;        this.connected = connected;&#10;        this.statusMessage = statusMessage;&#10;    }&#10;&#10;    public boolean isConnected() {&#10;        return connected;&#10;    }&#10;    public void setConnected(boolean connected) {&#10;        this.connected = connected;&#10;    }&#10;    public String getStatusMessage() {&#10;        return statusMessage;&#10;    }&#10;    public void setStatusMessage(String statusMessage) {&#10;        this.statusMessage = statusMessage;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/RolePermissionResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/RolePermissionResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.RolePermission;&#10;import java.util.List;&#10;&#10;public class RolePermissionResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;RolePermission&gt; data;&#10;&#10;    public RolePermissionResponse(int page, int limit, int total, List&lt;RolePermission&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;RolePermission&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;RolePermission&gt; data) {&#10;        this.data = data;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/RoomResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/RoomResponse.java" />
              <option name="originalContent" value="package com.example.hamster.data.model.response;&#10;&#10;public class RoomResponse {&#10;    // TODO: Add fields&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.Room;&#10;import java.util.List;&#10;&#10;public class RoomResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;Room&gt; data;&#10;&#10;    public RoomResponse(int page, int limit, int total, List&lt;Room&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;Room&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;Room&gt; data) {&#10;        this.data = data;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/SubRoomResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/SubRoomResponse.java" />
              <option name="originalContent" value="package com.example.hamster.data.model.response;&#10;&#10;public class SubRoomResponse {&#10;    // TODO: Add fields&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.SubRoom;&#10;import java.util.List;&#10;&#10;public class SubRoomResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;SubRoom&gt; data;&#10;&#10;    public SubRoomResponse(int page, int limit, int total, List&lt;SubRoom&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    // Getters &amp; Setters&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;SubRoom&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;SubRoom&gt; data) {&#10;        this.data = data;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/TemplateResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/TemplateResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;public class TemplateResponse {&#10;    private String id;&#10;    private String name;&#10;    private String description;&#10;&#10;    public TemplateResponse(String id, String name, String description) {&#10;        this.id = id;&#10;        this.name = name;&#10;        this.description = description;&#10;    }&#10;&#10;    public String getId() {&#10;        return id;&#10;    }&#10;    public void setId(String id) {&#10;        this.id = id;&#10;    }&#10;    public String getName() {&#10;        return name;&#10;    }&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/VendorResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/VendorResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.Vendor;&#10;import java.util.List;&#10;&#10;public class VendorResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;Vendor&gt; data;&#10;&#10;    public VendorResponse(int page, int limit, int total, List&lt;Vendor&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;Vendor&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;Vendor&gt; data) {&#10;        this.data = data;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/WorkingUnitResponse.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/data/model/response/WorkingUnitResponse.java" />
              <option name="updatedContent" value="package com.example.hamster.data.model.response;&#10;&#10;import com.example.hamster.data.model.WorkingUnit;&#10;import java.util.List;&#10;&#10;public class WorkingUnitResponse {&#10;    private int page;&#10;    private int limit;&#10;    private int total;&#10;    private List&lt;WorkingUnit&gt; data;&#10;&#10;    public WorkingUnitResponse(int page, int limit, int total, List&lt;WorkingUnit&gt; data) {&#10;        this.page = page;&#10;        this.limit = limit;&#10;        this.total = total;&#10;        this.data = data;&#10;    }&#10;&#10;    public int getPage() {&#10;        return page;&#10;    }&#10;    public void setPage(int page) {&#10;        this.page = page;&#10;    }&#10;    public int getLimit() {&#10;        return limit;&#10;    }&#10;    public void setLimit(int limit) {&#10;        this.limit = limit;&#10;    }&#10;    public int getTotal() {&#10;        return total;&#10;    }&#10;    public void setTotal(int total) {&#10;        this.total = total;&#10;    }&#10;    public List&lt;WorkingUnit&gt; getData() {&#10;        return data;&#10;    }&#10;    public void setData(List&lt;WorkingUnit&gt; data) {&#10;        this.data = data;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/inventory/AssetDetailViewModel.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/inventory/AssetDetailViewModel.java" />
              <option name="originalContent" value="// File: app/src/main/java/com/example/hamster/inventory/AssetDetailViewModel.java&#10;package com.example.hamster.inventory;&#10;&#10;import android.app.Application;&#10;import androidx.annotation.NonNull;&#10;import androidx.lifecycle.AndroidViewModel;&#10;import androidx.lifecycle.LiveData;&#10;import androidx.lifecycle.MutableLiveData;&#10;import com.example.hamster.data.model.Asset;&#10;import com.example.hamster.data.model.AssetDetailResponse;&#10;import com.example.hamster.data.model.OptionItem;&#10;import com.example.hamster.data.model.UpdateAssetRequest;&#10;import com.example.hamster.data.model.response.OptionsResponse;&#10;import com.example.hamster.data.network.ApiClient;&#10;import com.example.hamster.data.network.ApiService;&#10;import com.google.gson.Gson;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;import okhttp3.MediaType;&#10;import okhttp3.MultipartBody;&#10;import okhttp3.RequestBody;&#10;import retrofit2.Call;&#10;import retrofit2.Callback;&#10;import retrofit2.Response;&#10;&#10;public class AssetDetailViewModel extends AndroidViewModel {&#10;    private final ApiService apiService;&#10;&#10;    // Data utama dan status&#10;    private final MutableLiveData&lt;Asset&gt; assetData = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;Boolean&gt; isSaveSuccess = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;Boolean&gt; isLoading = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;Boolean&gt; isError = new MutableLiveData&lt;&gt;();&#10;&#10;    // &quot;Wadah&quot; untuk semua perubahan dari semua fragment&#10;    private final UpdateAssetRequest pendingUpdateRequest = new UpdateAssetRequest();&#10;&#10;    // Data untuk dropdown&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; categoryOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; subCategoryOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; brandOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; parentAssetOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; hospitalOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; buildingOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; floorOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; roomOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; subRoomOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; divisionOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; workingUnitOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; userOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; vendorOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;String&gt;&gt; ownershipOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;String&gt;&gt; conditionOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;String&gt;&gt; unitOptions = new MutableLiveData&lt;&gt;();&#10;&#10;    public AssetDetailViewModel(@NonNull Application application) {&#10;        super(application);&#10;        apiService = ApiClient.getClient(application).create(ApiService.class);&#10;    }&#10;&#10;    // --- Getters ---&#10;    public LiveData&lt;Asset&gt; getAssetData() { return assetData; }&#10;    public LiveData&lt;Boolean&gt; getIsSaveSuccess() { return isSaveSuccess; }&#10;    public LiveData&lt;Boolean&gt; getIsLoading() { return isLoading; }&#10;    public LiveData&lt;Boolean&gt; getIsError() { return isError; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getCategoryOptions() { return categoryOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getSubCategoryOptions() { return subCategoryOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getBrandOptions() { return brandOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getParentAssetOptions() { return parentAssetOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getHospitalOptions() { return hospitalOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getBuildingOptions() { return buildingOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getFloorOptions() { return floorOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getRoomOptions() { return roomOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getSubRoomOptions() { return subRoomOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getDivisionOptions() { return divisionOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getWorkingUnitOptions() { return workingUnitOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getUserOptions() { return userOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getVendorOptions() { return vendorOptions; }&#10;    public LiveData&lt;List&lt;String&gt;&gt; getOwnershipOptions() { return ownershipOptions; }&#10;    public LiveData&lt;List&lt;String&gt;&gt; getConditionOptions() { return conditionOptions; }&#10;    public LiveData&lt;List&lt;String&gt;&gt; getUnitOptions() { return unitOptions; }&#10;&#10;&#10;    // --- Metode spesifik untuk menerima data dari setiap fragment ---&#10;    public void updateAssetInfoData(UpdateAssetRequest data) {&#10;        pendingUpdateRequest.setName(data.getName());&#10;        pendingUpdateRequest.setCode(data.getCode());&#10;        pendingUpdateRequest.setCode2(data.getCode2());&#10;        pendingUpdateRequest.setCode3(data.getCode3());&#10;        pendingUpdateRequest.setType(data.getType());&#10;        pendingUpdateRequest.setSerialNumber(data.getSerialNumber());&#10;        pendingUpdateRequest.setDescription(data.getDescription());&#10;        pendingUpdateRequest.setTotal(data.getTotal());&#10;        pendingUpdateRequest.setUnit(data.getUnit());&#10;        pendingUpdateRequest.setCondition(data.getCondition());&#10;        pendingUpdateRequest.setOwnership(data.getOwnership());&#10;        pendingUpdateRequest.setParentId(data.getParentId());&#10;        pendingUpdateRequest.setCategoryId(data.getCategoryId());&#10;        pendingUpdateRequest.setSubcategoryId(data.getSubcategoryId());&#10;        pendingUpdateRequest.setBrandId(data.getBrandId());&#10;    }&#10;&#10;    public void updateLocationData(UpdateAssetRequest data) {&#10;        pendingUpdateRequest.setRoomId(data.getRoomId());&#10;        pendingUpdateRequest.setSubRoomId(data.getSubRoomId());&#10;        pendingUpdateRequest.setResponsibleDivisionId(data.getResponsibleDivisionId());&#10;        pendingUpdateRequest.setResponsibleWorkingUnitId(data.getResponsibleWorkingUnitId());&#10;        pendingUpdateRequest.setResponsibleUserId(data.getResponsibleUserId());&#10;    }&#10;&#10;    public void updateMaintenanceData(UpdateAssetRequest data) {&#10;        pendingUpdateRequest.setVendorId(data.getVendorId());&#10;        pendingUpdateRequest.setProcurementDate(data.getProcurementDate());&#10;        pendingUpdateRequest.setWarrantyExpirationDate(data.getWarrantyExpirationDate());&#10;        pendingUpdateRequest.setPurchasePrice(data.getPurchasePrice());&#10;        pendingUpdateRequest.setPoNumber(data.getPoNumber());&#10;        pendingUpdateRequest.setInvoiceNumber(data.getInvoiceNumber());&#10;        pendingUpdateRequest.setDepreciation(data.getDepreciation());&#10;        pendingUpdateRequest.setDepreciationValue(data.getDepreciationValue());&#10;        pendingUpdateRequest.setDepreciationStartDate(data.getDepreciationStartDate());&#10;        pendingUpdateRequest.setDepreciationDurationMonth(data.getDepreciationDurationMonth());&#10;    }&#10;&#10;&#10;    // --- Metode Fetch ---&#10;    public void fetchAllOptions() {&#10;        fetchCategoryOptions();&#10;        fetchBrandOptions();&#10;        fetchParentAssetOptions();&#10;        fetchHospitalOptions();&#10;        fetchDivisionOptions();&#10;        fetchWorkingUnitOptions();&#10;        fetchUserOptions();&#10;        fetchVendorOptions();&#10;        fetchOwnershipOptions();&#10;        fetchConditionOptions();&#10;        fetchUnitOptions();&#10;    }&#10;&#10;    public void fetchAssetById(String assetId) {&#10;        isLoading.setValue(true);&#10;        apiService.getAssetById(assetId).enqueue(new Callback&lt;AssetDetailResponse&gt;() {&#10;            @Override&#10;            public void onResponse(@NonNull Call&lt;AssetDetailResponse&gt; call, @NonNull Response&lt;AssetDetailResponse&gt; response) {&#10;                isLoading.setValue(false);&#10;                if (response.isSuccessful() &amp;&amp; response.body() != null) {&#10;                    assetData.setValue(response.body().getData());&#10;                } else {&#10;                    isError.setValue(true);&#10;                }&#10;            }&#10;            @Override&#10;            public void onFailure(@NonNull Call&lt;AssetDetailResponse&gt; call, @NonNull Throwable t) {&#10;                isLoading.setValue(false);&#10;                isError.setValue(true);&#10;            }&#10;        });&#10;    }&#10;&#10;    public void fetchCategoryOptions() { apiService.getAssetCategoryOptions().enqueue(createOptionsCallback(categoryOptions)); }&#10;    public void fetchSubCategoryOptions(String categoryId) { if (categoryId != null) apiService.getAssetSubCategoryOptions(categoryId).enqueue(createOptionsCallback(subCategoryOptions)); }&#10;    public void fetchBrandOptions() { apiService.getBrandOptions().enqueue(createOptionsCallback(brandOptions)); }&#10;    public void fetchParentAssetOptions() { apiService.getAssetOptions().enqueue(createOptionsCallback(parentAssetOptions)); }&#10;    public void fetchHospitalOptions() { apiService.getHospitalOptions().enqueue(createOptionsCallback(hospitalOptions)); }&#10;    public void fetchBuildingOptions(String hospitalId) { if (hospitalId != null) apiService.getBuildingOptionsForHospital(hospitalId).enqueue(createOptionsCallback(buildingOptions)); }&#10;    public void fetchFloorOptions(String buildingId) { if (buildingId != null) apiService.getFloorOptionsForBuilding(buildingId).enqueue(createOptionsCallback(floorOptions)); }&#10;    public void fetchRoomOptions(String floorId) { if (floorId != null) apiService.getRoomOptionsByFloor(floorId).enqueue(createOptionsCallback(roomOptions)); }&#10;    public void fetchSubRoomOptions(String roomId) { if (roomId != null) apiService.getSubRoomOptionsByRoom(roomId).enqueue(createOptionsCallback(subRoomOptions)); }&#10;    public void fetchDivisionOptions() { apiService.getDivisionOptions().enqueue(createOptionsCallback(divisionOptions)); }&#10;    public void fetchWorkingUnitOptions() { apiService.getWorkingUnitOptions().enqueue(createOptionsCallback(workingUnitOptions)); }&#10;    public void fetchUserOptions() { apiService.getUserOptions().enqueue(createOptionsCallback(userOptions)); }&#10;    public void fetchVendorOptions() { apiService.getVendorOptions().enqueue(createOptionsCallback(vendorOptions)); }&#10;    public void fetchOwnershipOptions() { ownershipOptions.setValue(java.util.Arrays.asList(&quot;Owned&quot;, &quot;KSO&quot;, &quot;Rent&quot;)); }&#10;    public void fetchConditionOptions() { conditionOptions.setValue(java.util.Arrays.asList(&quot;Good&quot;, &quot;Slightly Damaged&quot;, &quot;Moderately Damaged&quot;, &quot;Heavily Damaged&quot;)); }&#10;    public void fetchUnitOptions() { unitOptions.setValue(java.util.Arrays.asList(&quot;pieces&quot;, &quot;unit&quot;, &quot;set&quot;)); }&#10;&#10;    // --- Metode Save ---&#10;    public void saveChanges(String assetId) {&#10;        // Validasi wajib: code dan name tidak boleh kosong/null/placeholder&#10;        if (pendingUpdateRequest.getCode() == null || pendingUpdateRequest.getCode().trim().isEmpty()&#10;                || pendingUpdateRequest.getName() == null || pendingUpdateRequest.getName().trim().isEmpty()) {&#10;            isError.setValue(true);&#10;            return;&#10;        }&#10;&#10;        isLoading.setValue(true);&#10;        Gson gson = new Gson();&#10;        String jsonRequest = gson.toJson(pendingUpdateRequest);&#10;        RequestBody requestBody = RequestBody.create(MediaType.parse(&quot;application/json; charset=utf-8&quot;), jsonRequest);&#10;        List&lt;MultipartBody.Part&gt; files = new ArrayList&lt;&gt;();&#10;&#10;        apiService.updateAsset(assetId, requestBody, files).enqueue(new Callback&lt;Asset&gt;() {&#10;            @Override&#10;            public void onResponse(@NonNull Call&lt;Asset&gt; call, @NonNull Response&lt;Asset&gt; response) {&#10;                isLoading.setValue(false);&#10;                isSaveSuccess.setValue(response.isSuccessful());&#10;                if (!response.isSuccessful()){&#10;                    isError.setValue(true);&#10;                }&#10;            }&#10;            @Override&#10;            public void onFailure(@NonNull Call&lt;Asset&gt; call, @NonNull Throwable t) {&#10;                isLoading.setValue(false);&#10;                isSaveSuccess.setValue(false);&#10;                isError.setValue(true);&#10;            }&#10;        });&#10;    }&#10;&#10;    // Generic Callback Helper&#10;    private Callback&lt;OptionsResponse&gt; createOptionsCallback(final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; liveData) {&#10;        return new Callback&lt;OptionsResponse&gt;() {&#10;            @Override&#10;            public void onResponse(@NonNull Call&lt;OptionsResponse&gt; call, @NonNull Response&lt;OptionsResponse&gt; response) {&#10;                if (response.isSuccessful() &amp;&amp; response.body() != null) {&#10;                    liveData.setValue(response.body().getData());&#10;                }&#10;            }&#10;            @Override&#10;            public void onFailure(@NonNull Call&lt;OptionsResponse&gt; call, @NonNull Throwable t) {&#10;                isError.setValue(true);&#10;            }&#10;        };&#10;    }&#10;}" />
              <option name="updatedContent" value="// File: app/src/main/java/com/example/hamster/inventory/AssetDetailViewModel.java&#10;package com.example.hamster.inventory;&#10;&#10;import android.app.Application;&#10;import androidx.annotation.NonNull;&#10;import androidx.lifecycle.AndroidViewModel;&#10;import androidx.lifecycle.LiveData;&#10;import androidx.lifecycle.MutableLiveData;&#10;import com.example.hamster.data.model.Asset;&#10;import com.example.hamster.data.model.AssetDetailResponse;&#10;import com.example.hamster.data.model.OptionItem;&#10;import com.example.hamster.data.model.UpdateAssetRequest;&#10;import com.example.hamster.data.model.response.OptionsResponse;&#10;import com.example.hamster.data.network.ApiClient;&#10;import com.example.hamster.data.network.ApiService;&#10;import com.google.gson.Gson;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;import okhttp3.MediaType;&#10;import okhttp3.MultipartBody;&#10;import okhttp3.RequestBody;&#10;import retrofit2.Call;&#10;import retrofit2.Callback;&#10;import retrofit2.Response;&#10;&#10;public class AssetDetailViewModel extends AndroidViewModel {&#10;    private final ApiService apiService;&#10;&#10;    // Data utama dan status&#10;    private final MutableLiveData&lt;Asset&gt; assetData = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;Boolean&gt; isSaveSuccess = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;Boolean&gt; isLoading = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;Boolean&gt; isError = new MutableLiveData&lt;&gt;();&#10;&#10;    // &quot;Wadah&quot; untuk semua perubahan dari semua fragment&#10;    private final UpdateAssetRequest pendingUpdateRequest = new UpdateAssetRequest();&#10;&#10;    // Data untuk dropdown&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; categoryOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; subCategoryOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; brandOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; parentAssetOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; hospitalOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; buildingOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; floorOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; roomOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; subRoomOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; divisionOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; workingUnitOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; userOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; vendorOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;String&gt;&gt; ownershipOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;String&gt;&gt; conditionOptions = new MutableLiveData&lt;&gt;();&#10;    private final MutableLiveData&lt;List&lt;String&gt;&gt; unitOptions = new MutableLiveData&lt;&gt;();&#10;&#10;    public AssetDetailViewModel(@NonNull Application application) {&#10;        super(application);&#10;        apiService = ApiClient.getClient(application).create(ApiService.class);&#10;    }&#10;&#10;    // --- Getters ---&#10;    public LiveData&lt;Asset&gt; getAssetData() { return assetData; }&#10;    public LiveData&lt;Boolean&gt; getIsSaveSuccess() { return isSaveSuccess; }&#10;    public LiveData&lt;Boolean&gt; getIsLoading() { return isLoading; }&#10;    public LiveData&lt;Boolean&gt; getIsError() { return isError; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getCategoryOptions() { return categoryOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getSubCategoryOptions() { return subCategoryOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getBrandOptions() { return brandOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getParentAssetOptions() { return parentAssetOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getHospitalOptions() { return hospitalOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getBuildingOptions() { return buildingOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getFloorOptions() { return floorOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getRoomOptions() { return roomOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getSubRoomOptions() { return subRoomOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getDivisionOptions() { return divisionOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getWorkingUnitOptions() { return workingUnitOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getUserOptions() { return userOptions; }&#10;    public LiveData&lt;List&lt;OptionItem&gt;&gt; getVendorOptions() { return vendorOptions; }&#10;    public LiveData&lt;List&lt;String&gt;&gt; getOwnershipOptions() { return ownershipOptions; }&#10;    public LiveData&lt;List&lt;String&gt;&gt; getConditionOptions() { return conditionOptions; }&#10;    public LiveData&lt;List&lt;String&gt;&gt; getUnitOptions() { return unitOptions; }&#10;&#10;&#10;    // --- Metode spesifik untuk menerima data dari setiap fragment ---&#10;    public void updateAssetInfoData(UpdateAssetRequest data) {&#10;        pendingUpdateRequest.setName(data.getName());&#10;        pendingUpdateRequest.setCode(data.getCode());&#10;        pendingUpdateRequest.setCode2(data.getCode2());&#10;        pendingUpdateRequest.setCode3(data.getCode3());&#10;        pendingUpdateRequest.setType(data.getType());&#10;        pendingUpdateRequest.setSerialNumber(data.getSerialNumber());&#10;        pendingUpdateRequest.setDescription(data.getDescription());&#10;        pendingUpdateRequest.setTotal(data.getTotal());&#10;        pendingUpdateRequest.setUnit(data.getUnit());&#10;        pendingUpdateRequest.setCondition(data.getCondition());&#10;        pendingUpdateRequest.setOwnership(data.getOwnership());&#10;        pendingUpdateRequest.setParentId(data.getParentId());&#10;        pendingUpdateRequest.setCategoryId(data.getCategoryId());&#10;        pendingUpdateRequest.setSubcategoryId(data.getSubcategoryId());&#10;        pendingUpdateRequest.setBrandId(data.getBrandId());&#10;    }&#10;&#10;    public void updateLocationData(UpdateAssetRequest data) {&#10;        pendingUpdateRequest.setRoomId(data.getRoomId());&#10;        pendingUpdateRequest.setSubRoomId(data.getSubRoomId());&#10;        pendingUpdateRequest.setResponsibleDivisionId(data.getResponsibleDivisionId());&#10;        pendingUpdateRequest.setResponsibleWorkingUnitId(data.getResponsibleWorkingUnitId());&#10;        pendingUpdateRequest.setResponsibleUserId(data.getResponsibleUserId());&#10;    }&#10;&#10;    public void updateMaintenanceData(UpdateAssetRequest data) {&#10;        pendingUpdateRequest.setVendorId(data.getVendorId());&#10;        pendingUpdateRequest.setProcurementDate(data.getProcurementDate());&#10;        pendingUpdateRequest.setWarrantyExpirationDate(data.getWarrantyExpirationDate());&#10;        pendingUpdateRequest.setPurchasePrice(data.getPurchasePrice());&#10;        pendingUpdateRequest.setPoNumber(data.getPoNumber());&#10;        pendingUpdateRequest.setInvoiceNumber(data.getInvoiceNumber());&#10;        pendingUpdateRequest.setDepreciation(data.getDepreciation());&#10;        pendingUpdateRequest.setDepreciationValue(data.getDepreciationValue());&#10;        pendingUpdateRequest.setDepreciationStartDate(data.getDepreciationStartDate());&#10;        pendingUpdateRequest.setDepreciationDurationMonth(data.getDepreciationDurationMonth());&#10;    }&#10;&#10;&#10;    // --- Metode Fetch ---&#10;    public void fetchAllOptions() {&#10;        fetchCategoryOptions();&#10;        fetchBrandOptions();&#10;        fetchParentAssetOptions();&#10;        fetchHospitalOptions();&#10;        fetchDivisionOptions();&#10;        fetchWorkingUnitOptions();&#10;        fetchUserOptions();&#10;        fetchVendorOptions();&#10;        fetchOwnershipOptions();&#10;        fetchConditionOptions();&#10;        fetchUnitOptions();&#10;    }&#10;&#10;    public void fetchAssetById(String assetId) {&#10;        isLoading.setValue(true);&#10;        apiService.getAssetById(assetId).enqueue(new Callback&lt;AssetDetailResponse&gt;() {&#10;            @Override&#10;            public void onResponse(@NonNull Call&lt;AssetDetailResponse&gt; call, @NonNull Response&lt;AssetDetailResponse&gt; response) {&#10;                isLoading.setValue(false);&#10;                if (response.isSuccessful() &amp;&amp; response.body() != null) {&#10;                    assetData.setValue(response.body().getData());&#10;                } else {&#10;                    isError.setValue(true);&#10;                }&#10;            }&#10;            @Override&#10;            public void onFailure(@NonNull Call&lt;AssetDetailResponse&gt; call, @NonNull Throwable t) {&#10;                isLoading.setValue(false);&#10;                isError.setValue(true);&#10;            }&#10;        });&#10;    }&#10;&#10;    public void fetchCategoryOptions() { apiService.getAssetCategoryOptions().enqueue(createOptionsCallback(categoryOptions)); }&#10;    public void fetchSubCategoryOptions(String categoryId) { if (categoryId != null) apiService.getAssetSubCategoryOptions(categoryId).enqueue(createOptionsCallback(subCategoryOptions)); }&#10;    public void fetchBrandOptions() { apiService.getBrandOptions().enqueue(createOptionsCallback(brandOptions)); }&#10;    public void fetchParentAssetOptions() { apiService.getAssetOptions().enqueue(createOptionsCallback(parentAssetOptions)); }&#10;    public void fetchHospitalOptions() { apiService.getHospitalOptions().enqueue(createOptionsCallback(hospitalOptions)); }&#10;    public void fetchBuildingOptions(String hospitalId) { if (hospitalId != null) apiService.getBuildingOptionsForHospital(hospitalId).enqueue(createOptionsCallback(buildingOptions)); }&#10;    public void fetchFloorOptions(String buildingId) { if (buildingId != null) apiService.getFloorOptionsForBuilding(buildingId).enqueue(createOptionsCallback(floorOptions)); }&#10;    public void fetchRoomOptions(String floorId) { if (floorId != null) apiService.getRoomOptionsByFloor(floorId).enqueue(createOptionsCallback(roomOptions)); }&#10;    public void fetchSubRoomOptions(String roomId) { if (roomId != null) apiService.getSubRoomOptionsByRoom(roomId).enqueue(createOptionsCallback(subRoomOptions)); }&#10;    public void fetchDivisionOptions() { apiService.getDivisionOptions().enqueue(createOptionsCallback(divisionOptions)); }&#10;    public void fetchWorkingUnitOptions() { apiService.getWorkingUnitOptions().enqueue(createOptionsCallback(workingUnitOptions)); }&#10;    public void fetchUserOptions() { apiService.getUserOptions().enqueue(createOptionsCallback(userOptions)); }&#10;    public void fetchVendorOptions() { apiService.getVendorOptions().enqueue(createOptionsCallback(vendorOptions)); }&#10;    public void fetchOwnershipOptions() { ownershipOptions.setValue(java.util.Arrays.asList(&quot;Owned&quot;, &quot;KSO&quot;, &quot;Rent&quot;)); }&#10;    public void fetchConditionOptions() { conditionOptions.setValue(java.util.Arrays.asList(&quot;Good&quot;, &quot;Slightly Damaged&quot;, &quot;Moderately Damaged&quot;, &quot;Heavily Damaged&quot;)); }&#10;    public void fetchUnitOptions() { unitOptions.setValue(java.util.Arrays.asList(&quot;pieces&quot;, &quot;unit&quot;, &quot;set&quot;)); }&#10;&#10;    // --- Metode Save ---&#10;    public void saveChanges(String assetId) {&#10;        // Hanya validasi code &amp; name sebagai field wajib&#10;        if (pendingUpdateRequest.getCode() == null || pendingUpdateRequest.getCode().trim().isEmpty()&#10;                || pendingUpdateRequest.getName() == null || pendingUpdateRequest.getName().trim().isEmpty()) {&#10;            isError.setValue(true);&#10;            return;&#10;        }&#10;&#10;        isLoading.setValue(true);&#10;        Gson gson = new Gson();&#10;        String jsonRequest = gson.toJson(pendingUpdateRequest);&#10;        RequestBody requestBody = RequestBody.create(MediaType.parse(&quot;application/json; charset=utf-8&quot;), jsonRequest);&#10;        List&lt;MultipartBody.Part&gt; files = new ArrayList&lt;&gt;();&#10;&#10;        apiService.updateAsset(assetId, requestBody, files).enqueue(new Callback&lt;Asset&gt;() {&#10;            @Override&#10;            public void onResponse(@NonNull Call&lt;Asset&gt; call, @NonNull Response&lt;Asset&gt; response) {&#10;                isLoading.setValue(false);&#10;                isSaveSuccess.setValue(response.isSuccessful());&#10;                if (!response.isSuccessful()){&#10;                    isError.setValue(true);&#10;                }&#10;            }&#10;            @Override&#10;            public void onFailure(@NonNull Call&lt;Asset&gt; call, @NonNull Throwable t) {&#10;                isLoading.setValue(false);&#10;                isSaveSuccess.setValue(false);&#10;                isError.setValue(true);&#10;            }&#10;        });&#10;    }&#10;&#10;    // Generic Callback Helper&#10;    private Callback&lt;OptionsResponse&gt; createOptionsCallback(final MutableLiveData&lt;List&lt;OptionItem&gt;&gt; liveData) {&#10;        return new Callback&lt;OptionsResponse&gt;() {&#10;            @Override&#10;            public void onResponse(@NonNull Call&lt;OptionsResponse&gt; call, @NonNull Response&lt;OptionsResponse&gt; response) {&#10;                if (response.isSuccessful() &amp;&amp; response.body() != null) {&#10;                    liveData.setValue(response.body().getData());&#10;                }&#10;            }&#10;            @Override&#10;            public void onFailure(@NonNull Call&lt;OptionsResponse&gt; call, @NonNull Throwable t) {&#10;                isError.setValue(true);&#10;            }&#10;        };&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hamster/inventory/AssetInfoFragment.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hamster/inventory/AssetInfoFragment.java" />
              <option name="originalContent" value="// File: app/src/main/java/com/example/hamster/inventory/AssetInfoFragment.java&#10;package com.example.hamster.inventory;&#10;&#10;import android.os.Bundle;&#10;import android.text.TextUtils;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.AutoCompleteTextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.annotation.Nullable;&#10;import androidx.fragment.app.Fragment;&#10;import androidx.lifecycle.ViewModelProvider;&#10;import com.example.hamster.R;&#10;import com.example.hamster.data.model.OptionItem;&#10;import com.example.hamster.data.model.UpdateAssetRequest;&#10;import com.google.android.material.textfield.TextInputEditText;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class AssetInfoFragment extends Fragment implements FragmentDataCollector {&#10;    private AssetDetailViewModel viewModel;&#10;    private TextInputEditText etCode, etCode2, etCode3, etName, etType, etSerial, etTotal, etDesc;&#10;    private AutoCompleteTextView acOwnership, acCategory, acSubCategory, acUnit, acBrand, acCondition, acParent;&#10;&#10;    private List&lt;OptionItem&gt; categoryList = new ArrayList&lt;&gt;();&#10;    private List&lt;OptionItem&gt; subCategoryList = new ArrayList&lt;&gt;();&#10;    private List&lt;OptionItem&gt; brandList = new ArrayList&lt;&gt;();&#10;    private List&lt;OptionItem&gt; parentAssetList = new ArrayList&lt;&gt;();&#10;&#10;    @Nullable&#10;    @Override&#10;    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c, @Nullable Bundle s) {&#10;        return inflater.inflate(R.layout.fragment_asset_info, c, false);&#10;    }&#10;&#10;    @Override&#10;    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {&#10;        super.onViewCreated(view, savedInstanceState);&#10;        viewModel = new ViewModelProvider(requireActivity()).get(AssetDetailViewModel.class);&#10;        initializeViews(view);&#10;        setupObservers();&#10;        setupDropdownListeners();&#10;    }&#10;&#10;    @Override&#10;    public void collectDataForSave() {&#10;        UpdateAssetRequest partialRequest = new UpdateAssetRequest();&#10;&#10;        partialRequest.setName(etName.getText().toString());&#10;        partialRequest.setCode(etCode.getText().toString());&#10;        partialRequest.setCode2(etCode2.getText().toString());&#10;        partialRequest.setCode3(etCode3.getText().toString());&#10;        partialRequest.setType(etType.getText().toString());&#10;        partialRequest.setSerialNumber(etSerial.getText().toString());&#10;        partialRequest.setDescription(etDesc.getText().toString());&#10;&#10;        if (!TextUtils.isEmpty(etTotal.getText().toString())) {&#10;            try {&#10;                partialRequest.setTotal(Integer.parseInt(etTotal.getText().toString()));&#10;            } catch (NumberFormatException e) {&#10;                partialRequest.setTotal(0);&#10;            }&#10;        }&#10;&#10;        partialRequest.setOwnership(acOwnership.getText().toString());&#10;        partialRequest.setUnit(acUnit.getText().toString());&#10;        partialRequest.setCondition(acCondition.getText().toString());&#10;&#10;        partialRequest.setCategoryId(getSelectedId(acCategory, categoryList));&#10;        partialRequest.setSubcategoryId(getSelectedId(acSubCategory, subCategoryList));&#10;        partialRequest.setBrandId(getSelectedId(acBrand, brandList));&#10;        partialRequest.setParentId(getSelectedId(acParent, parentAssetList));&#10;&#10;        viewModel.updateAssetInfoData(partialRequest);&#10;    }&#10;&#10;    private void initializeViews(View view) {&#10;        etCode = view.findViewById(R.id.editTextCode);&#10;        etCode2 = view.findViewById(R.id.editTextCode2);&#10;        etCode3 = view.findViewById(R.id.editTextCode3);&#10;        etName = view.findViewById(R.id.editTextName);&#10;        etType = view.findViewById(R.id.editTextType);&#10;        etSerial = view.findViewById(R.id.editTextSerial);&#10;        etTotal = view.findViewById(R.id.editTextTotal);&#10;        etDesc = view.findViewById(R.id.editTextDescription);&#10;        acOwnership = view.findViewById(R.id.autoCompleteOwnership);&#10;        acUnit = view.findViewById(R.id.autoCompleteUnit);&#10;        acCondition = view.findViewById(R.id.autoCompleteCondition);&#10;        acCategory = view.findViewById(R.id.autoCompleteCategory);&#10;        acSubCategory = view.findViewById(R.id.autoCompleteSubCategory);&#10;        acBrand = view.findViewById(R.id.autoCompleteBrand);&#10;        acParent = view.findViewById(R.id.autoCompleteParent);&#10;    }&#10;&#10;    private void setupDropdownListeners() {&#10;        acCategory.setOnItemClickListener((parent, view, position, id) -&gt; {&#10;            OptionItem selected = (OptionItem) parent.getItemAtPosition(position);&#10;            viewModel.fetchSubCategoryOptions(selected.getId());&#10;            acSubCategory.setText(&quot;&quot;, false);&#10;        });&#10;    }&#10;&#10;    private void setupObservers() {&#10;        viewModel.getAssetData().observe(getViewLifecycleOwner(), asset -&gt; {&#10;            if (asset == null) return;&#10;            etCode.setText(asset.getCode());&#10;            etCode2.setText(asset.getCode2());&#10;            etCode3.setText(asset.getCode3());&#10;            etName.setText(asset.getName());&#10;            etType.setText(asset.getType());&#10;            etSerial.setText(asset.getSerialNumber());&#10;            if(asset.getTotal() != null) etTotal.setText(String.valueOf(asset.getTotal()));&#10;            etDesc.setText(asset.getDescription());&#10;            acOwnership.setText(asset.getOwnership(), false);&#10;            acUnit.setText(asset.getUnit(), false);&#10;            acCondition.setText(asset.getCondition(), false);&#10;            if (asset.getCategory() != null) acCategory.setText(asset.getCategory().getName(), false);&#10;            if (asset.getSubcategory() != null) acSubCategory.setText(asset.getSubcategory().getName(), false);&#10;            if (asset.getBrand() != null) acBrand.setText(asset.getBrand().getName(), false);&#10;            if (asset.getParent() != null) acParent.setText(asset.getParent().getName(), false);&#10;        });&#10;&#10;        viewModel.getCategoryOptions().observe(getViewLifecycleOwner(), options -&gt; populateDropdown(acCategory, options, categoryList));&#10;        viewModel.getSubCategoryOptions().observe(getViewLifecycleOwner(), options -&gt; populateDropdown(acSubCategory, options, subCategoryList));&#10;        viewModel.getBrandOptions().observe(getViewLifecycleOwner(), options -&gt; populateDropdown(acBrand, options, brandList));&#10;        viewModel.getParentAssetOptions().observe(getViewLifecycleOwner(), options -&gt; populateDropdown(acParent, options, parentAssetList));&#10;        viewModel.getOwnershipOptions().observe(getViewLifecycleOwner(), options -&gt; populateStringDropdown(acOwnership, options));&#10;        viewModel.getConditionOptions().observe(getViewLifecycleOwner(), options -&gt; populateStringDropdown(acCondition, options));&#10;        viewModel.getUnitOptions().observe(getViewLifecycleOwner(), options -&gt; populateStringDropdown(acUnit, options));&#10;    }&#10;&#10;    private void populateDropdown(AutoCompleteTextView view, List&lt;OptionItem&gt; options, List&lt;OptionItem&gt; localList) {&#10;        if (options == null || getContext() == null) return;&#10;        localList.clear();&#10;        localList.addAll(options);&#10;        ArrayAdapter&lt;OptionItem&gt; adapter = new ArrayAdapter&lt;&gt;(getContext(), android.R.layout.simple_dropdown_item_1line, localList);&#10;        view.setAdapter(adapter);&#10;    }&#10;&#10;    private void populateStringDropdown(AutoCompleteTextView view, List&lt;String&gt; options) {&#10;        if (options == null || getContext() == null) return;&#10;        ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;&gt;(getContext(), android.R.layout.simple_dropdown_item_1line, options);&#10;        view.setAdapter(adapter);&#10;    }&#10;&#10;    private String getSelectedId(AutoCompleteTextView view, List&lt;OptionItem&gt; list) {&#10;        String name = view.getText().toString();&#10;        if (name.isEmpty() || list.isEmpty()) return null;&#10;        for (OptionItem item : list) {&#10;            if (item.getName().equals(name)) {&#10;                return item.getId();&#10;            }&#10;        }&#10;        return null;&#10;    }&#10;}" />
              <option name="updatedContent" value="// File: app/src/main/java/com/example/hamster/inventory/AssetInfoFragment.java&#10;package com.example.hamster.inventory;&#10;&#10;import android.os.Bundle;&#10;import android.text.TextUtils;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.AutoCompleteTextView;&#10;import androidx.annotation.NonNull;&#10;import androidx.annotation.Nullable;&#10;import androidx.fragment.app.Fragment;&#10;import androidx.lifecycle.ViewModelProvider;&#10;import com.example.hamster.R;&#10;import com.example.hamster.data.model.OptionItem;&#10;import com.example.hamster.data.model.UpdateAssetRequest;&#10;import com.google.android.material.textfield.TextInputEditText;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class AssetInfoFragment extends Fragment implements FragmentDataCollector {&#10;    private AssetDetailViewModel viewModel;&#10;    private TextInputEditText etCode, etCode2, etCode3, etName, etType, etSerial, etTotal, etDesc;&#10;    private AutoCompleteTextView acOwnership, acCategory, acSubCategory, acUnit, acBrand, acCondition, acParent;&#10;&#10;    private List&lt;OptionItem&gt; categoryList = new ArrayList&lt;&gt;();&#10;    private List&lt;OptionItem&gt; subCategoryList = new ArrayList&lt;&gt;();&#10;    private List&lt;OptionItem&gt; brandList = new ArrayList&lt;&gt;();&#10;    private List&lt;OptionItem&gt; parentAssetList = new ArrayList&lt;&gt;();&#10;&#10;    @Nullable&#10;    @Override&#10;    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c, @Nullable Bundle s) {&#10;        return inflater.inflate(R.layout.fragment_asset_info, c, false);&#10;    }&#10;&#10;    @Override&#10;    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {&#10;        super.onViewCreated(view, savedInstanceState);&#10;        viewModel = new ViewModelProvider(requireActivity()).get(AssetDetailViewModel.class);&#10;        initializeViews(view);&#10;        setupObservers();&#10;        setupDropdownListeners();&#10;    }&#10;&#10;    @Override&#10;    public void collectDataForSave() {&#10;        UpdateAssetRequest partialRequest = new UpdateAssetRequest();&#10;&#10;        String name = etName.getText().toString();&#10;        String code = etCode.getText().toString();&#10;&#10;        // Validasi UI: hanya code &amp; name wajib diisi&#10;        if (TextUtils.isEmpty(code)) {&#10;            etCode.setError(&quot;Asset Code wajib diisi&quot;);&#10;        } else {&#10;            etCode.setError(null);&#10;        }&#10;        if (TextUtils.isEmpty(name)) {&#10;            etName.setError(&quot;Asset Name wajib diisi&quot;);&#10;        } else {&#10;            etName.setError(null);&#10;        }&#10;&#10;        partialRequest.setName(name);&#10;        partialRequest.setCode(code);&#10;        partialRequest.setCode2(etCode2.getText().toString());&#10;        partialRequest.setCode3(etCode3.getText().toString());&#10;        partialRequest.setType(etType.getText().toString());&#10;        partialRequest.setSerialNumber(etSerial.getText().toString());&#10;        partialRequest.setDescription(etDesc.getText().toString());&#10;&#10;        if (!TextUtils.isEmpty(etTotal.getText().toString())) {&#10;            try {&#10;                partialRequest.setTotal(Integer.parseInt(etTotal.getText().toString()));&#10;            } catch (NumberFormatException e) {&#10;                partialRequest.setTotal(0);&#10;            }&#10;        }&#10;&#10;        partialRequest.setOwnership(acOwnership.getText().toString());&#10;        partialRequest.setUnit(acUnit.getText().toString());&#10;        partialRequest.setCondition(acCondition.getText().toString());&#10;&#10;        partialRequest.setCategoryId(getSelectedId(acCategory, categoryList));&#10;        partialRequest.setSubcategoryId(getSelectedId(acSubCategory, subCategoryList));&#10;        partialRequest.setBrandId(getSelectedId(acBrand, brandList));&#10;        partialRequest.setParentId(getSelectedId(acParent, parentAssetList));&#10;&#10;        viewModel.updateAssetInfoData(partialRequest);&#10;    }&#10;&#10;    private void initializeViews(View view) {&#10;        etCode = view.findViewById(R.id.editTextCode);&#10;        etCode2 = view.findViewById(R.id.editTextCode2);&#10;        etCode3 = view.findViewById(R.id.editTextCode3);&#10;        etName = view.findViewById(R.id.editTextName);&#10;        etType = view.findViewById(R.id.editTextType);&#10;        etSerial = view.findViewById(R.id.editTextSerial);&#10;        etTotal = view.findViewById(R.id.editTextTotal);&#10;        etDesc = view.findViewById(R.id.editTextDescription);&#10;        acOwnership = view.findViewById(R.id.autoCompleteOwnership);&#10;        acUnit = view.findViewById(R.id.autoCompleteUnit);&#10;        acCondition = view.findViewById(R.id.autoCompleteCondition);&#10;        acCategory = view.findViewById(R.id.autoCompleteCategory);&#10;        acSubCategory = view.findViewById(R.id.autoCompleteSubCategory);&#10;        acBrand = view.findViewById(R.id.autoCompleteBrand);&#10;        acParent = view.findViewById(R.id.autoCompleteParent);&#10;    }&#10;&#10;    private void setupDropdownListeners() {&#10;        acCategory.setOnItemClickListener((parent, view, position, id) -&gt; {&#10;            OptionItem selected = (OptionItem) parent.getItemAtPosition(position);&#10;            viewModel.fetchSubCategoryOptions(selected.getId());&#10;            acSubCategory.setText(&quot;&quot;, false);&#10;        });&#10;    }&#10;&#10;    private void setupObservers() {&#10;        viewModel.getAssetData().observe(getViewLifecycleOwner(), asset -&gt; {&#10;            if (asset == null) return;&#10;            etCode.setText(asset.getCode());&#10;            etCode2.setText(asset.getCode2());&#10;            etCode3.setText(asset.getCode3());&#10;            etName.setText(asset.getName());&#10;            etType.setText(asset.getType());&#10;            etSerial.setText(asset.getSerialNumber());&#10;            if(asset.getTotal() != null) etTotal.setText(String.valueOf(asset.getTotal()));&#10;            etDesc.setText(asset.getDescription());&#10;            acOwnership.setText(asset.getOwnership(), false);&#10;            acUnit.setText(asset.getUnit(), false);&#10;            acCondition.setText(asset.getCondition(), false);&#10;            if (asset.getCategory() != null) acCategory.setText(asset.getCategory().getName(), false);&#10;            if (asset.getSubcategory() != null) acSubCategory.setText(asset.getSubcategory().getName(), false);&#10;            if (asset.getBrand() != null) acBrand.setText(asset.getBrand().getName(), false);&#10;            if (asset.getParent() != null) acParent.setText(asset.getParent().getName(), false);&#10;        });&#10;&#10;        viewModel.getCategoryOptions().observe(getViewLifecycleOwner(), options -&gt; populateDropdown(acCategory, options, categoryList));&#10;        viewModel.getSubCategoryOptions().observe(getViewLifecycleOwner(), options -&gt; populateDropdown(acSubCategory, options, subCategoryList));&#10;        viewModel.getBrandOptions().observe(getViewLifecycleOwner(), options -&gt; populateDropdown(acBrand, options, brandList));&#10;        viewModel.getParentAssetOptions().observe(getViewLifecycleOwner(), options -&gt; populateDropdown(acParent, options, parentAssetList));&#10;        viewModel.getOwnershipOptions().observe(getViewLifecycleOwner(), options -&gt; populateStringDropdown(acOwnership, options));&#10;        viewModel.getConditionOptions().observe(getViewLifecycleOwner(), options -&gt; populateStringDropdown(acCondition, options));&#10;        viewModel.getUnitOptions().observe(getViewLifecycleOwner(), options -&gt; populateStringDropdown(acUnit, options));&#10;    }&#10;&#10;    private void populateDropdown(AutoCompleteTextView view, List&lt;OptionItem&gt; options, List&lt;OptionItem&gt; localList) {&#10;        if (options == null || getContext() == null) return;&#10;        localList.clear();&#10;        localList.addAll(options);&#10;        ArrayAdapter&lt;OptionItem&gt; adapter = new ArrayAdapter&lt;&gt;(getContext(), android.R.layout.simple_dropdown_item_1line, localList);&#10;        view.setAdapter(adapter);&#10;    }&#10;&#10;    private void populateStringDropdown(AutoCompleteTextView view, List&lt;String&gt; options) {&#10;        if (options == null || getContext() == null) return;&#10;        ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;&gt;(getContext(), android.R.layout.simple_dropdown_item_1line, options);&#10;        view.setAdapter(adapter);&#10;    }&#10;&#10;    private String getSelectedId(AutoCompleteTextView view, List&lt;OptionItem&gt; list) {&#10;        String name = view.getText().toString();&#10;        if (name.isEmpty() || list.isEmpty()) return null;&#10;        for (OptionItem item : list) {&#10;            if (item.getName().equals(name)) {&#10;                return item.getId();&#10;            }&#10;        }&#10;        return null;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>